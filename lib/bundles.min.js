const path=require("path"),fs=require("fs-extra"),globby=require("globby"),matter=require("gray-matter"),log=require("loglevel"),merge=require("@brikcss/merge");function compile(e="",t={}){return resolveConfig(e,t).then(runBundles).then(createWatchers).then(prepResults).catch(e=>(log.error(e),e))}function resolveConfig(e="",t={}){return new Promise((n,r)=>{let s=!1;if("string"==typeof e){const n=require("cosmiconfig")("bundles");if(e){if(!fs.pathExistsSync(e))return r(new Error("Config file not found."));e=e.split(":"),t.bundles=t.bundles||e[1]||void 0,"all"!==t.bundles&&"string"==typeof t.bundles&&(t.bundles=t.bundles.split(/,?\s+/)),e=e[0],e=n.loadSync(e)}else e=n.searchSync(e),log.info(`Config file found: ${e.filepath}`);if(!e)return r(new Error("Config file was not found."));s=e.filepath,e=e.config}return e.input&&e.bundlers&&(e={bundles:[e]}),e=Object.assign({success:!1,bundles:[],bundlesMap:{},options:{},data:{},watchers:{},on:{}},e,{options:t,_meta:{configFile:s,createdWatchers:!1}}),log.setDefaultLevel(["trace","debug","info","warn","error","silent"].includes(e.options.loglevel)?e.options.loglevel:"info"),e.bundles=normalizeBundles(e.bundles,e.options,e.data),n(e)})}function runBundles(e={}){const t=[],n=[];return e.bundles.forEach((r,s)=>{!r._meta.isValid||e.options.bundles&&!e.options.bundles.includes(r.id)?(r.success="skipped",t.push(r)):(n.push(r.id),t.push(runBundle(r)))}),log.info(`Bundling [${n.join(", ")}]...`),Promise.all(t).then(t=>(e.bundles=t,e))}function createWatchers(e={}){if(e._meta.createdWatchers)return e;if(e._meta.createdWatchers=!0,"string"==typeof e.options.watch&&(e.options.watch=e.options.watch.split(/,?\s+/)),!1===e.options.watch)return e;e.options.watch instanceof Array||(e.options.watch=Boolean(e.options.watch));const t=require("chokidar"),n=[];return e.bundles.forEach((r,s)=>{(r.watch||e.options.watch&&!(e.options.watch instanceof Array&&e.options.watch.includes(r.id))||e.watchers[r.id])&&n.push(new Promise((n,s)=>{const o=t.watch(r.output.map(e=>e.source.path),"object"==typeof r.watch?r.watch:{});o.on("change",t=>{if(log.info(`File changed: ${path.relative(process.cwd(),t)}`),r._meta.isWatching)return r.errors=[],e.errors=[],e.options.bundles=[r.id],r.output.some((n,s)=>n.source.path===t&&(r.output[s]=Object.assign(r.output[s],readFile(t,e.options.frontMatter||{})),!0)),runBundles(e).then(prepResults)}).on("error",s).on("ready",()=>{r._meta.isWatching=!0,n()}),e._meta.configFile&&o.add(e._meta.configFile),o.id=r.id,e.watchers[r.id]=o}))}),n.length&&log.info(`Watching [${Object.keys(e.watchers).join(", ")}]...`),Promise.all(n).then(()=>e)}function prepResults(e={}){return e.success=!e.bundles.some(e=>!e._meta.isValid||!e.success),e.bundlesMap={},e.bundles.forEach((t,n)=>{e.bundlesMap[t.id]=e.bundles[n]}),e.errors=e.bundles.reduce((e,t,n)=>e.concat(t.errors),[]),e.errors.length&&(log.error(e.errors.length>1?`There were ${e.errors.length} errors...`:"There was an error..."),e.errors.forEach(e=>log.error(e))),e.success?log.info(`[ok] Success${e.errors.length?` with ${e.errors.length} error(s).`:"!"}`):log.info("[!!] Failed. Check errors."),e}function runBundle(e={}){return e.bundlers.reduce((t,n,r)=>t.then(e=>{const t=n.run(e,n);return n.success=!0,t}).catch(t=>(n.success=!1,e.errors.push(t),e)),Promise.resolve(e)).then(e=>(e.success=e.bundlers.every(e=>e.success),e)).catch(t=>(e.success=!1,e.errors.push(t),e))}function normalizeBundles(e=[],t={},n={}){return e instanceof Object&&e.constructor===Object&&(e=[e]),e instanceof Array||throwError("`config.bundles` must be an Array."),e.map((e,r)=>normalizeBundle(e,t,r,n))}function normalizeBundle(e={},t={},n,r={}){return e instanceof Object||(e={_meta:{isValid:!1}}),(e=Object.assign({errors:[],id:String(n),input:[],output:[],bundlers:[],data:{},watch:Boolean(t.watch||e.watch),on:{},_meta:{}},e)).input instanceof Array?(e.input.forEach((t,n)=>{if(0===t.indexOf("gh:"))if(1===(t=t.slice(3).split("@")).length)t=`https://github.com/${t[0]}.git`;else if(2===t.length)t=`https://${t[0]}@github.com/${t[1]}.git`;else if(t.length>2){const e=t[0].length;t=`https://${t[0]}@github.com/${t.join("@").slice(e)}.git`}if(0===t.indexOf("http://")||0===t.indexOf("https://")||0===t.indexOf("git@")){const r=path.join(".repos",path.basename(t).replace(".git","")),s=require("child_process").execSync;fs.ensureDirSync(".repos"),fs.removeSync(r),s(`git clone ${t} ${r}`),e.input[n]=r}}),e.input=globby.sync(e.input,Object.assign({dot:!0},t.glob||{}))):"string"==typeof e.input?e.content?e.input=[{path:e.input,content:e.content}]:e.input=[e.input]:"object"==typeof e.input&&e.input.constructor===Object&&(e.input=[e.input]),e.input.forEach((n,s)=>{const o=e.output[s]=readFile(n,t.frontMatter||{});o.data=merge({},o.data,"function"==typeof r?r(o,e):r||{},"function"==typeof e.data?e.data(o,e):e.data||{})}),"string"==typeof e.bundlers&&(e.bundlers=e.bundlers.split(/,?\s+/)),e.bundlers=e.bundlers.map(t=>resolveBundler(t,e)),e._meta.isValid=isValidBundle(e),e}function readFile(e,t={}){const n={},r=e instanceof Object;return n.source=r?matter(e.content,t):matter.read(e,t),n.source.path=r?e.path:path.normalize(e),n.content=n.source.content,0===n.content.indexOf("\n")&&(n.content=n.content.slice(1)),n.data=n.source.data,n}function resolveBundler(e,t){if(e instanceof Object&&e.constructor===Object||(e={run:e}),e._meta=e._meta||{},e._meta.isValid=!0,e.success=!1,"function"==typeof e.run)return e;if(!e.run||"string"!=typeof e.run)return e._meta.isValid=!1,e;if(0!==e.run.indexOf("./")&&0!==e.run.indexOf("../")||(e.run=path.resolve(e.run)),-1===path.basename(e.run).indexOf("bundles-")){const t=path.join(path.dirname(e.run),"bundles-"+path.basename(e.run));try{require.resolve(t)&&(e.run=t)}catch(e){}}try{e.run=require(e.run)}catch(n){return e._meta.isValid=!1,t.errors.push(n),e}return"function"!=typeof e.run&&(e._meta.isValid=!1),e}function isValidBundle(e={}){return e instanceof Object&&e.input instanceof Array&&e.input.every(e=>"string"==typeof e)&&e.bundlers instanceof Array&&e.bundlers.length&&e.bundlers.some(e=>e._meta.isValid)}function throwError(e="Uh oh..."){throw new Error(e)}module.exports=compile;