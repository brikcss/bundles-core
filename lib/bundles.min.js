const path=require("path"),fs=require("fs-extra"),globby=require("globby"),matter=require("gray-matter"),log=require("loglevel"),merge=require("@brikcss/merge");let errors=[];function bundles(e="",t={}){return resolveConfig(e,t).then(runBundles).then(createWatchers).then(prepResults).then(logResults).catch(e=>(log.error(e),e))}function resolveConfig(e="",t={}){return new Promise((n,r)=>{let o=!1;if("string"==typeof e){const n=require("cosmiconfig")("bundles");if(e){if(!fs.pathExistsSync(e))return r(new Error("Config file not found."));e=e.split(":"),t.bundles=t.bundles||e[1]||void 0,"all"!==t.bundles&&"string"==typeof t.bundles&&(t.bundles=t.bundles.split(/,?\s+/)),e=e[0],e=n.loadSync(e)}else e=n.searchSync(e),log.info(`Config file found: ${e.filepath}`);if(!e)return r(new Error("Config file was not found."));o=e.filepath,e=e.config}return e.input&&e.bundlers&&(e={bundles:[e]}),e=merge({success:!1,bundles:[],bundlesMap:{},options:{glob:{dot:!0}},data:{},watchers:{},on:{}},e,{options:t,_meta:{configFile:o,createdWatchers:!1}}),log.setDefaultLevel(["trace","debug","info","warn","error","silent"].includes(e.options.loglevel)?e.options.loglevel:"info"),e.bundles=normalizeBundles(e.bundles,e.options,e.data),n(e)})}function runBundles(e={}){const t=[],n=[];return e.bundles.forEach((r,o)=>{!r._meta.isValid||e.options.bundles&&!e.options.bundles.includes(r.id)?(r.success="skipped",t.push(r)):(n.push(r.id),t.push(runBundle(r)))}),log.info(`Bundling [${n.join(", ")}]...`),Promise.all(t).then(t=>(e.bundles=t,e))}function createWatchers(e={}){if(e._meta.createdWatchers)return e;if(e._meta.createdWatchers=!0,"string"==typeof e.options.watch&&(e.options.watch=e.options.watch.split(/,?\s+/)),!1===e.options.watch)return e;e.options.watch instanceof Array||(e.options.watch=Boolean(e.options.watch));const t=require("chokidar"),n=[];return e.bundles.forEach((r,o)=>{(r.watch||e.options.watch&&!(e.options.watch instanceof Array&&e.options.watch.includes(r.id))||e.watchers[r.id])&&n.push(new Promise((n,o)=>{const s=t.watch(r.output.map(e=>e.source.path),"object"==typeof r.watch?r.watch:{});s.on("change",t=>{if(log.info(`File changed: ${path.relative(process.cwd(),t)}`),r._meta.isWatching)return errors=[],e.options.bundles=[r.id],r.output.some((n,o)=>n.source.path===t&&(r.output[o]=Object.assign(r.output[o],readFile(t,{globals:e.data,locals:r.data,options:r.options})),!0)),runBundles(e).then(prepResults)}).on("error",o).on("ready",()=>{r._meta.isWatching=!0,n()}),e._meta.configFile&&s.add(e._meta.configFile),s.id=r.id,e.watchers[r.id]=s}))}),n.length&&log.info(`Watching [${Object.keys(e.watchers).join(", ")}]...`),Promise.all(n).then(()=>e)}function prepResults(e={}){return e.success=!e.bundles.some(e=>!e._meta.isValid||!e.success),e.bundlesMap={},e.bundles.forEach((t,n)=>{e.bundlesMap[t.id]=e.bundles[n]}),e}function logResults(e={}){return errors.length&&(log.error(errors.length>1?`There were ${errors.length} errors...`:"There was an error..."),errors.forEach(e=>log.error(e))),e.success?log.info(`[ok] Success${errors.length?` with ${errors.length} error(s).`:"!"}`):log.info("[!!] Failed. Check errors."),errors=[],e}function runBundle(e={}){return e.bundlers.reduce((t,n,r)=>t.then(e=>n.run(e,n)).then(e=>(n.success=!0,e)).catch(t=>(n.success=!1,errors.push(t),e)),Promise.resolve(e)).then(e=>(e.success=e.bundlers.every(e=>e.success),e)).catch(t=>(e.success=!1,errors.push(t),e))}function normalizeBundles(e=[],t={},n={}){return e instanceof Object&&e.constructor===Object&&(e=[e]),e instanceof Array||throwError("`config.bundles` must be an Array."),e.map((e,r)=>normalizeBundle(e,t,r,n))}function normalizeBundle(e={},t={},n,r={}){return e instanceof Object||(e={_meta:{isValid:!1}}),(e=Object.assign({errors:[],id:String(n),input:[],output:[],bundlers:[],options:{},data:{},watch:Boolean(t.watch||e.watch),on:{},_meta:{}},e)).options=merge({},t,e.options),resolveOutputFiles(e,r),"string"==typeof e.bundlers&&(e.bundlers=e.bundlers.split(/,?\s+/)),e.bundlers=e.bundlers.map(t=>resolveBundler(t,e)),e._meta.isValid=isValidBundle(e),e}function resolveOutputFiles(e={},t={}){return("string"==typeof e.input||"object"==typeof e.input&&e.input.constructor===Object)&&(e.input=[e.input]),e.input=e.input.reduce((n,r,o)=>(isGitRepo(r)?r=resolveGitRepo(r):"string"==typeof r&&(r=globby.sync(r,e.options.glob)),"object"==typeof r&&r.constructor===Object?(e.output.push(readFile(r,{globals:t,locals:e.data,options:e.options})),n.push(r.path)):(e.output=e.output.concat(r.map(n=>readFile(n,{globals:t,locals:e.data,options:e.options}))),n=n.concat(r)),n),[]),e}function isGitRepo(e=""){return"string"==typeof e&&(0===e.indexOf("http://")||0===e.indexOf("https://")||0===e.indexOf("gh:")||0===e.indexOf("git@"))}function resolveGitRepo(e="",t={}){if(0===e.indexOf("gh:"))if(1===(e=e.slice(3).split("@")).length)e=`https://github.com/${e[0]}.git`;else if(2===e.length)e=`https://${e[0]}@github.com/${e[1]}.git`;else if(e.length>2){const t=e[0].length;e=`https://${e[0]}@github.com/${e.join("@").slice(t)}.git`}const n=path.join(".repos",path.basename(e).replace(".git","")),r=require("child_process").execSync;return fs.ensureDirSync(".repos"),fs.removeSync(n),r(`git clone ${e} ${n}`),globby.sync(n,t.glob)}function readFile(e,{globals:t,locals:n,options:r={}}={}){const o={},s=e instanceof Object;return o.source=s?matter(e.content,r):matter.read(e,r),o.source.path=s?e.path:path.normalize(e),o.content=o.source.content,0===o.content.indexOf("\n")&&(o.content=o.content.slice(1)),o.data=o.source.data,o.data=merge({},o.source.data,"function"==typeof t?t(o):t||{},"function"==typeof n?n(o):n||{}),o}function resolveBundler(e){if(e instanceof Object&&e.constructor===Object||(e={run:e}),e._meta=e._meta||{},e._meta.isValid=!0,e.success=!1,"function"==typeof e.run)return e;if(!e.run||"string"!=typeof e.run)return e._meta.isValid=!1,e;if(0!==e.run.indexOf("./")&&0!==e.run.indexOf("../")||(e.run=path.resolve(e.run)),-1===path.basename(e.run).indexOf("bundles-")){const t=path.join(path.dirname(e.run),"bundles-"+path.basename(e.run));try{require.resolve(t)&&(e.run=t)}catch(e){}}try{e.run=require(e.run)}catch(t){return e._meta.isValid=!1,errors.push(t),e}return"function"!=typeof e.run&&(e._meta.isValid=!1),e}function isValidBundle(e={}){return e instanceof Object&&e.input instanceof Array&&e.input.every(e=>"string"==typeof e||"object"==typeof e&&e.constructor===Object)&&e.bundlers instanceof Array&&e.bundlers.length&&e.bundlers.some(e=>e._meta.isValid)}function throwError(e="Uh oh..."){throw new Error(e)}bundles.run=runBundle,bundles.resolveBundler=resolveBundler,module.exports=bundles;